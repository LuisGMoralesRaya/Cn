<style>
body.template-product .video-wrapper::after {
  padding-bottom: 100%;
}
</style>

{%- if product.media.size > 0 -%}
  {%- assign show_thumbnails_if_one_media = true -%}

  <div class="card">
    <div class="card__section card__section--tight">
      <div class="product-gallery {% if show_thumbnails_if_one_media %}product-gallery--with-thumbnails{% endif %}">
        {%- assign selected_media = product.selected_variant.featured_media | default: product.featured_media -%}

        <div class="product-gallery__carousel-wrapper">
          <div class="product-gallery__carousel {% if template != 'product.quick-view' and section.settings.enable_image_zoom %}product-gallery__carousel--zoomable{% endif %}" data-media-count="{%- comment -%}{{ product.media.size }}{%- endcomment -%} 2" data-initial-media-id="{{ selected_media.id }}">
            {%- for media in product.media -%}
              {%- assign is_media_group = false -%}
              {%- assign is_media_filtered = false -%}
              {%- assign media_alt = media.alt -%}

              {%- if media.alt contains '#' -%}
                {%- assign is_media_group = true -%}
                {%- assign alt_parts = media.alt | split: '#' -%}

                {%- comment -%}
                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                as a custom ALT tag
                {%- endcomment -%}

                {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                  {%- assign media_alt = alt_parts.first | strip -%}
                {%- else -%}
                  {%- assign media_alt = product.title -%}
                {%- endif -%}

                {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                {%- for option in product.options -%}
                  {%- assign downcase_option = option | downcase -%}
                  {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                  {%- if downcase_option == downcase_group_option -%}
                    {%- assign option_setting = 'option' | append: forloop.index -%}
                    {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                    {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                    {%- assign media_variant_ids = media.variants | map: 'id' -%}

                    {%- if option_value != downcase_group_value -%}
                      {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                        {%- assign is_media_filtered = true -%}
                      {%- endunless -%}
                    {%- endif -%}

                    {%- break -%}
                  {%- endif -%}
                {%- endfor -%}
              {%- endif -%}

              <div class="product-gallery__carousel-item {% if media.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ media.id }}" data-media-type="{{ media.media_type | escape }}" {% if media.media_type == 'external_video' %}data-media-host="{{ media.host | escape }}" data-video-id="{{ media.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                {%- case media.media_type -%}
                  {%- when 'image' -%}
                    <div class="product-gallery__size-limiter" style="max-width: {{ media.width }}px">
                      {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: media -%}{%- endcapture -%}
                      {%- assign image_url = media | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                      <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: media.aspect_ratio }}%">
                        <img loading="lazy" width="auto" height="100%" id="stk_first" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ media | img_url: '1600x' }}" data-zoom-width="{{ media.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                        <noscript>
                          <img loading="lazy" width="auto" height="100%" src="{{ media | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                        </noscript>
                      </div>
                    </div>

                  {%- when 'model' -%}
                    <div class="product-gallery__model">
                      <div class="model-wrapper">
                        {{- media | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                      </div>
                    </div>

                  {%- when 'external_video' -%}
                    <div class="product-gallery__external-video">
                      <div class="video-wrapper">
                        {{- media | external_video_tag: image_size: '1080x' -}}
                      </div>
                    </div>

                  {%- when 'video' -%}
                    <div class="product-gallery__video">
                      <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: media.aspect_ratio }}%">
                        {{- media | video_tag: image_size: '1920x', controls: true -}}
                      </div>
                    </div>
                {%- endcase -%}
              </div>
            {%- endfor -%}
            
            {% comment %} YES ðŸš€ {% endcomment %}




{%- if product.tags contains '1:1' or product.tags contains '1x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-1x1-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '4:3' or product.tags contains '4x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-4x3-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:2' or product.tags contains '3x2' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-3x2-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '2:1' or product.tags contains '2x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-2x1-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:4' or product.tags contains '3x4' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-3x4-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '2:3' or product.tags contains '2x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-2x3-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:2' or product.tags contains '1x2' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-1x2-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:3' or product.tags contains '1x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-1x3-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:4' or product.tags contains '1x4' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-1x4-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:1' or product.tags contains '3x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-3x1-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '4:1' or product.tags contains '4x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-4x1-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:caravaggio' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lca-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:da-vinci' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-ldv-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:dali' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lda-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:delacroix' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lde-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:kahlo' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lka-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:klimt' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lkl-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:miguel-angel' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lmi-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:monet' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lmo-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:picasso' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lpi-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:rembrandt' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lrt-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:renoir' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lrr-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:rivera' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lri-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:van_gogh' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lvg-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:warhol' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = media.alt -%} {%- if media.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = media.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = media.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource3 in all_products['sg-lwa-a99'].media  -%}
      <div class="product-gallery__carousel-item {% if resource3.id == selected_resource3.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource3.id }}" data-media-type="{{ resource3.media_type | escape }}" {% if resource3.media_type == 'external_video' %}data-media-host="{{ resource3.host | escape }}" data-video-id="{{ resource3.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
        {%- case resource3.media_type -%}
          {%- when 'image' -%}
            <div class="product-gallery__size-limiter" style="max-width: {{ resource3.width }}px">
              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource3 -%}{%- endcapture -%}
              {%- assign image_url = resource3 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource3.aspect_ratio }}%">
                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource3 | img_url: '1600x' }}" data-zoom-width="{{ resource3.width | at_most: 1600 }}" alt="size guide">

                <noscript>
                  <img loading="lazy" width="auto" height="100%" src="{{ resource3 | img_url: '800x' }}" alt="size guide">
                </noscript>
              </div>
            </div>
        {%- endcase -%}
      </div>
    {%- endfor -%}
{%- endif -%}




            
            {% if product.tags contains '04-clc' or product.tags contains '01-clp' or product.tags contains '06-nc' %}
                {% if collection.tags contains '07-set' %}
                {% for resource1 in all_products['set2-a99'].media  %}
                    {%- assign is_media_group = false -%}
                    {%- assign is_media_filtered = false -%}
                    {%- assign media_alt = resource1.alt -%}

                    {%- if resource1.alt contains '#' -%}
                      {%- assign is_media_group = true -%}
                      {%- assign alt_parts = resource1.alt | split: '#' -%}

                      {%- comment -%}
                      If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                      as a custom ALT tag
                      {%- endcomment -%}

                      {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                        {%- assign media_alt = alt_parts.first | strip -%}
                      {%- else -%}
                        {%- assign media_alt = product.title -%}
                      {%- endif -%}

                      {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                      {%- for option in product.options -%}
                        {%- assign downcase_option = option | downcase -%}
                        {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                        {%- if downcase_option == downcase_group_option -%}
                          {%- assign option_setting = 'option' | append: forloop.index -%}
                          {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                          {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                          {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                          {%- if option_value != downcase_group_value -%}
                            {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                              {%- assign is_media_filtered = true -%}
                            {%- endunless -%}
                          {%- endif -%}

                          {%- break -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}

                    <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                      {%- case resource1.media_type -%}
                        {%- when 'image' -%}
                          <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                            {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                            {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                            <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                              <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                              <noscript>
                                <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                              </noscript>
                            </div>
                          </div>

                        {%- when 'model' -%}
                          <div class="product-gallery__model">
                            <div class="model-wrapper">
                              {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                            </div>
                          </div>

                        {%- when 'external_video' -%}
                          <div class="product-gallery__external-video">
                            <div class="video-wrapper">
                              {{- resource1 | external_video_tag: image_size: '1920x' -}}
                            </div>
                          </div>

                        {%- when 'video' -%}
                          <div class="product-gallery__video">
                            <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                              {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                            </div>
                          </div>
                      {%- endcase -%}                
                    </div>
                {%- endfor -%}
                {% else %}
                {% assign r1a99m = 0 %}
                {% for resource1 in all_products['a99'].media  %}
                    {%- assign is_media_group = false -%}
                    {%- assign is_media_filtered = false -%}
                    {%- assign media_alt = resource1.alt -%}

                    {%- if resource1.alt contains '#' -%}
                      {%- assign is_media_group = true -%}
                      {%- assign alt_parts = resource1.alt | split: '#' -%}

                      {%- comment -%}
                      If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                      as a custom ALT tag
                      {%- endcomment -%}

                      {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                        {%- assign media_alt = alt_parts.first | strip -%}
                      {%- else -%}
                        {%- assign media_alt = product.title -%}
                      {%- endif -%}

                      {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                      {%- for option in product.options -%}
                        {%- assign downcase_option = option | downcase -%}
                        {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                        {%- if downcase_option == downcase_group_option -%}
                          {%- assign option_setting = 'option' | append: forloop.index -%}
                          {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                          {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                          {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                          {%- if option_value != downcase_group_value -%}
                            {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                              {%- assign is_media_filtered = true -%}
                            {%- endunless -%}
                          {%- endif -%}

                          {%- break -%}
                        {%- endif -%}
                      {%- endfor -%}
                    {%- endif -%}

                    <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                      {%- case resource1.media_type -%}
                        {%- when 'image' -%}
                          <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                            {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                            {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                            <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                              <img loading="lazy" width="auto" height="100%" id="r1a99m_{{ r1a99m }}" class="product-gallery__image lazyload image--fade-in lazyautosizes {% unless product.tags contains 'MwEp8UY7' %} lazyload image--fade-in {% endunless %}" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                              <noscript>
                                <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                              </noscript>
                            </div>
                          </div>

                        {%- when 'model' -%}
                          <div class="product-gallery__model">
                            <div class="model-wrapper">
                              {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                            </div>
                          </div>

                        {%- when 'external_video' -%}
                          <div class="product-gallery__external-video">
                            <div class="video-wrapper">
                              {{- resource1 | external_video_tag: image_size: '1920x' -}}
                            </div>
                          </div>

                        {%- when 'video' -%}
                          <div class="product-gallery__video">
                            <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                              {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                            </div>
                          </div>
                      {%- endcase -%}                
                    </div>
                {% assign r1a99m = r1a99m | plus: 1 %}
                {%- endfor -%}
                {% endif %}
            {% elsif product.tags contains '03-custom'  or product.tags contains 'acrilicos' or product.tags contains 'aluminios' or product.tags contains 'canvas' or product.tags contains 'posters' or product.tags contains 'PixSets'  or product.tags contains 'viniles'   %}
                {% if product.title contains 'crÃ­lico' or product.tags contains 'acrilicos' %}
                  {% for resource1 in all_products['ac-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
                {% if product.title contains 'luminio' or product.tags contains 'aluminios' %}
                  {% for resource1 in all_products['al-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
                {% if product.title contains 'anvas'or product.tags contains 'canvas' %}
                  {% for resource1 in all_products['ca-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
                {% if product.title contains 'pixset' or product.tags contains 'PixSets' %}
                  {% for resource1 in all_products['pi-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
                {% if product.title contains 'Ã³ster' or product.tags contains 'posters' %}
                  {% for resource1 in all_products['po-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
                {% if product.title contains 'inil' or product.tags contains 'viniles' or product.tags contains 'vinilos' %}
                  {% for resource1 in all_products['vi-a99'].media  %}
                      {%- assign is_media_group = false -%}
                      {%- assign is_media_filtered = false -%}
                      {%- assign media_alt = resource1.alt -%}

                      {%- if resource1.alt contains '#' -%}
                        {%- assign is_media_group = true -%}
                        {%- assign alt_parts = resource1.alt | split: '#' -%}

                        {%- comment -%}
                        If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                        as a custom ALT tag
                        {%- endcomment -%}

                        {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                          {%- assign media_alt = alt_parts.first | strip -%}
                        {%- else -%}
                          {%- assign media_alt = product.title -%}
                        {%- endif -%}

                        {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                        {%- for option in product.options -%}
                          {%- assign downcase_option = option | downcase -%}
                          {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                          {%- if downcase_option == downcase_group_option -%}
                            {%- assign option_setting = 'option' | append: forloop.index -%}
                            {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                            {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                            {%- assign media_variant_ids = resource1.variants | map: 'id' -%}

                            {%- if option_value != downcase_group_value -%}
                              {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                {%- assign is_media_filtered = true -%}
                              {%- endunless -%}
                            {%- endif -%}

                            {%- break -%}
                          {%- endif -%}
                        {%- endfor -%}
                      {%- endif -%}

                      <div class="product-gallery__carousel-item {% if resource1.id == selected_media.id %}is-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" tabindex="-1" data-media-id="{{ resource1.id }}" data-media-type="{{ resource1.media_type | escape }}" {% if resource1.media_type == 'external_video' %}data-media-host="{{ resource1.host | escape }}" data-video-id="{{ resource1.external_id | escape }}"{% endif %} {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                        {%- case resource1.media_type -%}
                          {%- when 'image' -%}
                            <div class="product-gallery__size-limiter" style="max-width: {{ resource1.width }}px">
                              {%- capture supported_sizes -%}{%- render 'image-size', sizes: '400,500,600,700,800,900,1000,1100,1200', image: resource1 -%}{%- endcapture -%}
                              {%- assign image_url = resource1 | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="product-gallery__image lazyload image--fade-in" data-src="{{ image_url }}" data-widths="[{{ supported_sizes }}]" data-sizes="auto" data-zoom="{{ resource1 | img_url: '1600x' }}" data-zoom-width="{{ resource1.width | at_most: 1600 }}" alt="{{ media_alt | escape }}">

                                <noscript>
                                  <img loading="lazy" width="auto" height="100%" src="{{ resource1 | img_url: '800x' }}" alt="{{ media_alt | escape }}">
                                </noscript>
                              </div>
                            </div>

                          {%- when 'model' -%}
                            <div class="product-gallery__model">
                              <div class="model-wrapper">
                                {{- resource1 | model_viewer_tag: image_size: '1920x', reveal: 'interaction', toggleable: true -}}
                              </div>
                            </div>

                          {%- when 'external_video' -%}
                            <div class="product-gallery__external-video">
                              <div class="video-wrapper">
                                {{- resource1 | external_video_tag: image_size: '1920x' -}}
                              </div>
                            </div>

                          {%- when 'video' -%}
                            <div class="product-gallery__video">
                              <div class="video-wrapper video-wrapper--native" style="padding-bottom: {{ 100.0 | divided_by: resource1.aspect_ratio }}%">
                                {{- resource1 | video_tag: image_size: '1920x', controls: true -}}
                              </div>
                            </div>
                        {%- endcase -%}                
                      </div>
                  {%- endfor -%}
                {% endif %}
            {% endif %}
            
          </div>

          {%- comment -%}Add the "view in your space" button, which allows to show the product in customer's environment (if the device supports it){%- endcomment -%}
          {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}

          {%- if first_3d_model -%}
            <button class="product-gallery__view-in-space button button--full" data-shopify-xr data-shopify-model3d-id="{{ first_3d_model.id }}" data-shopify-model3d-default-id="{{ first_3d_model.id }}" data-shopify-title="{{ product.title | escape }}" data-shopify-xr-hidden>
              {%- render 'icon', icon: 'media-view-in-space' -%} {{- 'product.general.view_in_space' | t -}}
            </button>
          {%- endif -%}

          {%- if template != 'product.quick-view' and section.settings.enable_image_zoom -%}
            <span class="product-gallery__zoom-notice">
              {% render 'icon', icon: 'zoom' %}
              <span class="hidden-pocket">{{ 'product.general.zoom' | t }}</span>
              <span class="hidden-lap-and-up">{{ 'product.general.zoom_mobile' | t }}</span>
            </span>
          {%- endif -%}
        </div>

        {%- if show_thumbnails_if_one_media -%}
        {% unless product.id == 6143970115773 %}
          <div class="scroller">
            <div class="scroller__inner">
              <div class="product-gallery__thumbnail-list">
                {%- for media in product.media -%}
                  {%- assign is_media_group = false -%}
                  {%- assign is_media_filtered = false -%}
                  {%- assign media_alt = media.alt -%}

                  {%- if media.alt contains '#' -%}
                    {%- assign is_media_group = true -%}
                    {%- assign alt_parts = media.alt | split: '#' -%}

                    {%- comment -%}
                      If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                      as a custom ALT tag
                    {%- endcomment -%}

                    {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                      {%- assign media_alt = alt_parts.first | strip -%}
                    {%- else -%}
                      {%- assign media_alt = product.title -%}
                    {%- endif -%}

                    {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                    {%- for option in product.options -%}
                      {%- assign downcase_option = option | downcase -%}
                      {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                      {%- if downcase_option == downcase_group_option -%}
                        {%- assign option_setting = 'option' | append: forloop.index -%}
                        {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                        {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                        {%- assign media_variant_ids = media.variants | map: 'id' -%}

                        {%- if option_value != downcase_group_value -%}
                          {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                            {%- assign is_media_filtered = true -%}
                          {%- endunless -%}
                        {%- endif -%}

                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}
                  {%- endif -%}

                  <a href="{{ media | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if media.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ media.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                    {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                    {%- case media.media_type -%}
                      {%- when 'model' -%}
                        <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                      {%- when 'video' or 'external_video' -%}
                        <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                    {%- endcase -%}

                    <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: media.preview_image.aspect_ratio }}%">
                      <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ media | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                    </div>
                  </a>
                {%- endfor -%}
                
                {% comment %} YES ðŸš€ {% endcomment %}







{%- if product.tags contains '1:1'or product.tags contains '1x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-1x1-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '4:3'or product.tags contains '4x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-4x3-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:2'or product.tags contains '3x2' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-3x2-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '2:1'or product.tags contains '2x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-2x1-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:4'or product.tags contains '3x4' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-3x4-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '2:3'or product.tags contains '2x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-2x3-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:2'or product.tags contains '1x2' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-1x2-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:3'or product.tags contains '1x3' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-1x3-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '1:4'or product.tags contains '1x4' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-1x4-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '3:1'or product.tags contains '3x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-3x1-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains '4:1'or product.tags contains '4x1' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-4x1-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:caravaggio' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lca-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:da-vinci' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-ldv-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:dali' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lda-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:delacroix' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lde-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:kahlo' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lka-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:klimt' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lkl-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:miguel-angel' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lmi-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:monet' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lmo-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:picasso' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lpi-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:rembrandt' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lrt-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:renoir' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lrr-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:rivera' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lri-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:van_gogh' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lvg-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}
{%- if product.tags contains 'lay:warhol' -%}
{%- assign is_media_group = false -%} {%- assign is_media_filtered = false -%} {%- assign media_alt = resource1.alt -%} {%- if resource1.alt contains '#' -%} {%- assign is_media_group = true -%} {%- assign alt_parts = resource1.alt | split: '#' -%} {%- comment -%} If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used as a custom ALT tag {%- endcomment -%} {%- if alt_parts.size == 2 and alt_parts.first != blank -%} {%- assign media_alt = alt_parts.first | strip -%} {%- else -%} {%- assign media_alt = product.title -%} {%- endif -%} {%- assign media_group_parts = alt_parts.last | split: '_' -%} {%- for option in product.options -%} {%- assign downcase_option = option | downcase -%} {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%} {%- if downcase_option == downcase_group_option -%} {%- assign option_setting = 'option' | append: forloop.index -%} {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%} {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%} {%- assign media_variant_ids = resource1.variants | map: 'id' -%} {%- if option_value != downcase_group_value -%} {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%} {%- assign is_media_filtered = true -%} {%- endunless -%} {%- endif -%} {%- break -%} {%- endif -%} {%- endfor -%} {%- endif -%}
    {%- for resource4 in all_products['sg-lwa-a99'].media  -%}
      <a href="{{ resource4 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource4.id == selected_resource4.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource4.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>

        <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource4.preview_image.aspect_ratio }}%">
          <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource4 | img_url: '130x' }}" alt="size guide">
        </div>
      </a>
    {%- endfor -%}
{%- endif -%}








                {% if product.tags contains '04-clc' or product.tags contains '01-clp' or product.tags contains '06-nc' %}
                    {% if product.tags contains '07-set' %}
                    {% for resource2 in all_products['set2-a99'].media  %}
                          {%- assign is_media_group = false -%}
                          {%- assign is_media_filtered = false -%}
                          {%- assign media_alt = resource2.alt -%}

                          {%- if resource2.alt contains '#' -%}
                            {%- assign is_media_group = true -%}
                            {%- assign alt_parts = resource2.alt | split: '#' -%}

                            {%- comment -%}
                              If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                              as a custom ALT tag
                            {%- endcomment -%}

                            {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                              {%- assign media_alt = alt_parts.first | strip -%}
                            {%- else -%}
                              {%- assign media_alt = product.title -%}
                            {%- endif -%}

                            {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                            {%- for option in product.options -%}
                              {%- assign downcase_option = option | downcase -%}
                              {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                              {%- if downcase_option == downcase_group_option -%}
                                {%- assign option_setting = 'option' | append: forloop.index -%}
                                {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                {%- if option_value != downcase_group_value -%}
                                  {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                    {%- assign is_media_filtered = true -%}
                                  {%- endunless -%}
                                {%- endif -%}

                                {%- break -%}
                              {%- endif -%}
                            {%- endfor -%}
                          {%- endif -%}

                          <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                            {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                            {%- case resource2.media_type -%}
                              {%- when 'model' -%}
                                <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                              {%- when 'video' or 'external_video' -%}
                                <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                            {%- endcase -%}

                            <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                              <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                            </div>
                          </a>
                    {%- endfor -%}
                    {% else %}
                    {% for resource2 in all_products['a99'].media  %}
                          {%- assign is_media_group = false -%}
                          {%- assign is_media_filtered = false -%}
                          {%- assign media_alt = resource2.alt -%}

                          {%- if resource2.alt contains '#' -%}
                            {%- assign is_media_group = true -%}
                            {%- assign alt_parts = resource2.alt | split: '#' -%}

                            {%- comment -%}
                              If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                              as a custom ALT tag
                            {%- endcomment -%}

                            {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                              {%- assign media_alt = alt_parts.first | strip -%}
                            {%- else -%}
                              {%- assign media_alt = product.title -%}
                            {%- endif -%}

                            {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                            {%- for option in product.options -%}
                              {%- assign downcase_option = option | downcase -%}
                              {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                              {%- if downcase_option == downcase_group_option -%}
                                {%- assign option_setting = 'option' | append: forloop.index -%}
                                {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                {%- if option_value != downcase_group_value -%}
                                  {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                    {%- assign is_media_filtered = true -%}
                                  {%- endunless -%}
                                {%- endif -%}

                                {%- break -%}
                              {%- endif -%}
                            {%- endfor -%}
                          {%- endif -%}

                          <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                            {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                            {%- case resource2.media_type -%}
                              {%- when 'model' -%}
                                <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                              {%- when 'video' or 'external_video' -%}
                                <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                            {%- endcase -%}

                            <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                              <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                            </div>
                          </a>
                    {%- endfor -%}
                    {% endif %}
                {% elsif product.tags contains '03-custom'  or product.tags contains 'acrilicos' or product.tags contains 'aluminios' or product.tags contains 'canvas' or product.tags contains 'posters' or product.tags contains 'PixSets'  or product.tags contains 'viniles'   %}
                    {% if product.title contains 'crÃ­lico' or product.tags contains 'acrilicos' %}
                      {% for resource2 in all_products['ac-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                    {% if product.title contains 'luminio' or product.tags contains 'aluminios' %}
                      {% for resource2 in all_products['al-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                    {% if product.title contains 'anvas' or product.tags contains 'canvas' %}
                      {% for resource2 in all_products['ca-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                    {% if product.title contains 'ixset' or product.tags contains 'PixSets' %}
                      {% for resource2 in all_products['pi-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                    {% if product.title contains 'Ã³ster' or product.tags contains 'posters' %}
                      {% for resource2 in all_products['po-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                    {% if product.title contains 'inil' or product.tags contains 'viniles' %}
                      {% for resource2 in all_products['vi-a99'].media  %}
                            {%- assign is_media_group = false -%}
                            {%- assign is_media_filtered = false -%}
                            {%- assign media_alt = resource2.alt -%}

                            {%- if resource2.alt contains '#' -%}
                              {%- assign is_media_group = true -%}
                              {%- assign alt_parts = resource2.alt | split: '#' -%}

                              {%- comment -%}
                                If the custom ALT tag contains two parts (for instance "My custom alt # color_blue") then the first part is actually used
                                as a custom ALT tag
                              {%- endcomment -%}

                              {%- if alt_parts.size == 2 and alt_parts.first != blank -%}
                                {%- assign media_alt = alt_parts.first | strip -%}
                              {%- else -%}
                                {%- assign media_alt = product.title -%}
                              {%- endif -%}

                              {%- assign media_group_parts = alt_parts.last | split: '_' -%}

                              {%- for option in product.options -%}
                                {%- assign downcase_option = option | downcase -%}
                                {%- assign downcase_group_option = media_group_parts.first | strip | downcase -%}

                                {%- if downcase_option == downcase_group_option -%}
                                  {%- assign option_setting = 'option' | append: forloop.index -%}
                                  {%- assign option_value = product.selected_or_first_available_variant[option_setting] | downcase -%}

                                  {%- assign downcase_group_value = media_group_parts.last | strip | downcase -%}
                                  {%- assign media_variant_ids = resource2.variants | map: 'id' -%}

                                  {%- if option_value != downcase_group_value -%}
                                    {%- unless media_variant_ids contains product.selected_or_first_available_variant.id -%}
                                      {%- assign is_media_filtered = true -%}
                                    {%- endunless -%}
                                  {%- endif -%}

                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}

                            <a href="{{ resource2 | img_url: '1920x' }}" rel="noopener" class="product-gallery__thumbnail {% if resource2.id == selected_media.id %}is-nav-selected{% endif %} {% if is_media_filtered %}is-filtered{% endif %}" data-media-id="{{ resource2.id }}" {% if is_media_group %}data-group-name="{{ media_group_parts.first | strip | downcase | escape }}" data-group-value="{{ media_group_parts.last | strip | downcase | escape }}"{% endif %}>
                              {%- comment -%}Based on the type of media, we have to add an icon as per Shopify rules{%- endcomment -%}

                              {%- case resource2.media_type -%}
                                {%- when 'model' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-model-badge' %}</span>

                                {%- when 'video' or 'external_video' -%}
                                  <span class="product-gallery__thumbnail-badge">{% render 'icon', icon: 'media-video-badge' %}</span>
                              {%- endcase -%}

                              <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: resource2.preview_image.aspect_ratio }}%">
                                <img loading="lazy" width="auto" height="100%" class="image--fade-in lazyload" data-src="{{ resource2 | img_url: '130x' }}" alt="{{ media_alt | escape }}">
                              </div>
                            </a>
                      {%- endfor -%}
                    {% endif %}
                {% endif %}
                
              </div>
            </div>
          </div>
        {%- endunless -%}
        {%- endif -%}

    {% if product.tags contains '03-custom'  or product.tags contains 'acrilicos' or product.tags contains 'aluminios' or product.tags contains 'canvas' or product.tags contains 'posters' or product.tags contains 'PixSets'  or product.tags contains 'viniles' %}
        {% else %}
          {%- if section.settings.enable_image_zoom -%}
            {%- comment -%}This code is used to power the mobile zoom and must not be removed nor altered{%- endcomment -%}
            <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
              <div class="pswp__bg"></div>
              <div class="pswp__scroll-wrap">
                <div class="pswp__container">
                  <div class="pswp__item"></div>
                  <div class="pswp__item"></div>
                  <div class="pswp__item"></div>
                </div>

                <div class="pswp__ui">
                  <button class="pswp__button pswp__button--close" aria-label="{{ 'general.accessibility.close' | t }}">
                    {% render 'icon', icon: 'close-2' %}
                  </button>

                  <div class="pswp__prev-next">
                    <button class="pswp__button pswp__button--arrow--left" aria-label="{{ 'general.accessibility.previous' | t }}">
                      {% render 'icon', icon: 'arrow-left' %}
                    </button>

                    <button class="pswp__button pswp__button--arrow--right" aria-label="{{ 'general.accessibility.next' | t }}">
                      {% render 'icon', icon: 'arrow-right' %}
                    </button>
                  </div>

                  <div class="pswp__pagination">
                    <span class="pswp__pagination-current"></span> / <span class="pswp__pagination-count"></span>
                  </div>
                </div>
              </div>
            </div>
          {%- endif -%}
        {% endif %}
      </div>
    </div>
  </div>
  {%- endif -%}