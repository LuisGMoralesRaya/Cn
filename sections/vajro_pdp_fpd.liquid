<style>
  header, footer, br {
    display: none !important;
  }
  #main #widget-fave-html, #beacon-container, #shopify-section-text-with-icons, #shopify-section-header, div#timer_SingleProduct, a#gara-sp {
    display: none !important;
  }
  .product-block-list__item--trust, .product-block-list__item--content, .section, .product-meta__share-buttons, .product-meta__reference  {
    display: none !important;
  }
  #zoko-8aec0844-b70f-11ec-b909-0242ac120002 {
    display: none !important;
  }
  .product-block-list__wrapper > div:nth-child(3) {
    display: block !important;
  }
  /* .fpd-element-toolbar-smart.fpd-type-image {    
    left: 20px !important;
    top: 500px !important;
    bottom: unset !important;
    right: unset !important;
    width: 75% !important;
    position: absolute !important;
  }   */

  .product-block-list__item--ifo {
    display: none !important;
  }
  /* .fpd-sub-panel {
    top: 0px !important;
  } */
  #cart_attr > div > .heading, a#gara-sp, div#timer_SingleProduct {
    pointer-events: none !important;
  }
  div[id^='zoko-'], div[id*='zoko-']{
    display: none !important;
  }
  @media only screen and (max-width: 356px) {
    .product-form__info-list >.product-form__info-item:nth-child(1) {
      min-height: 75px !important;
    }
  }
  /* .fpd-element-toolbar-smart .fpd-sub-panel {
    width: 100%;
    min-width: 0 !important;
  } */
  html body span#msi_holder {
    display: none !important;
  }
  fpd-element-toolbar.fpd-smart.fpd-layout-small{
    top: 500px !important;
    bottom: auto !important;
  }
  .fpd-draggable-dialog{
    top: 300px !important;
  }
</style>
<script>
 
  let isVajroSDKScriptLoaded = false;
  let vajroSDKScript = document.createElement("script");
  vajroSDKScript.type = "text/javascript";
  vajroSDKScript.src = "https://praveenvajro.github.io/lowcode/vajro-sdk-latest/vajro-sdk-new.js";
  vajroSDKScript.id = "vajro-sdk-script";
  vajroSDKScript.onload = function () {
    isVajroSDKScriptLoaded = true;
  };
  document.getElementsByTagName("head")[0].appendChild(vajroSDKScript);

  function hideAddButton () {
    let handleElemFunction = null;
    handleElemFunction = setInterval(function () {
      if(document.getElementsByClassName("product-form__add-button")[0]) {
        document.getElementsByClassName("product-form__add-button")[0].style.cssText = "pointer-events: none; opacity: 0.4;";
        showAddButton();
        clearInterval(handleElemFunction);
      }
    }, 100);
  }
  function showAddButton() {
    let handleElemFunction = null;
    handleElemFunction = setInterval(function () {
      if(document.getElementsByClassName("product-form__add-button")[0] && document.getElementsByClassName("fpd-loader-wrapper")[0].style.display === 'none') {
        document.getElementsByClassName("product-form__add-button")[0].style.cssText = "";
        clearInterval(handleElemFunction);
      }
    }, 100);
  }
  hideAddButton();
  
  let replaceElemFunction = null;
   replaceElemFunction = setInterval(function () {
    var old_element = document.getElementsByClassName('product-form__add-button')[0];
    var new_element = old_element && old_element.cloneNode(true) || null;
    let {VajroSDK = null, FPD = null} = window;
    if(old_element && VajroSDK && isVajroSDKScriptLoaded && FPD && FPD?.productPage?.atcOperator?.atcStrategy) {
      clearInterval(replaceElemFunction);
      calcPrice();
      var btnParentElement = document.createElement('div');
      btnParentElement.setAttribute("id", "vajroAddToCart");
      
      // old_element.parentNode.replaceChild(btnParentElement, old_element);

      // document.getElementById("vajroAddToCart").appendChild(new_element);
      // document.getElementById("vajroAddToCart").addEventListener('click', handleAddToCart);
      document.querySelector('a#gara-sp').remove();
      document.querySelector('div#timer_SingleProduct').remove();

      FPD.productPage.atcOperator.atcStrategy = function (lineItemCache, shopifyProduct) {
        console.log({lineItemCache, shopifyProduct})
        let { id = null} = shopifyProduct
        let properties = this.buildProperties(lineItemCache, shopifyProduct)
        let variantId = this.getVariantId(lineItemCache)
    
        let formData = new FormData(this.productPage.$addToCartForm[0]) // access non jq node

        console.log(this.productPage.$addToCartForm[0], 'FormData');
    
        console.log({properties, id, variantId});
        if(properties['Custom Images']) {
          properties['Custom Images'] = properties['Custom Images'].toString();
        }

        VajroSDK.addLineItemToCart()
            .setProductId(id.toString())
            .setVariantId(variantId.toString())
            .setQuantity(1)
            .setCustomAttributes(properties)
            .exec().then(res => {
              // alert(JSON.stringify({res}))
              VajroSDK
                .navigateTo()
                .setNavigationType('CART')
                .setHandle('')
                .exec();
            }, err => {
              alert(JSON.stringify({err}))
            })
        
    
        console.log({lineItemCache, shopifyProduct}, );
      }
    }
  }, 300);

  $('body').on('DOMSubtreeModified', '.product-form__variants > .product-form__option:nth-child(1) > .product-form__option-name', function() {
    hideAddButton();
    setTimeout(function() {
      calcPrice();
    }, 1000);
  });

  $('body').on('DOMSubtreeModified', '.product-form__variants > .product-form__option:nth-child(2) > .product-form__option-name', function() {
    hideAddButton();
    setTimeout(function() {
      calcPrice();
    }, 1000);
  });

  const percentageDiscount = 50;

  function calcPrice () {
    let replaceElemFunction = null;
    replaceElemFunction = setInterval(function () {
      let originalPrice = document.getElementsByClassName("price--compare")[0].innerText;
      if(originalPrice) {
        clearInterval(replaceElemFunction);
        const priceHighlight = document.getElementsByClassName("price--highlight")[0];
        const updatePercentageDiscount = document.getElementById("save");
        const removeTextinPrice  = originalPrice.replace(/[^0-9\.]+/g, "");
        const percentageCal = ((Number(percentageDiscount) / 100) *  Number(removeTextinPrice)).toFixed(2);
        const formatPrice = (Number(removeTextinPrice) - Number(percentageCal)).toFixed(2);
        console.log({removeTextinPrice, formatPrice, percentageCal});
        priceHighlight.innerHTML = `<span class="visually-hidden">Sale Price</span><span style="margin-right:5px">$</span>${ formatNumbertoPrice(formatPrice) }`;
        updatePercentageDiscount.innerHTML = `Ahorras $${ formatNumbertoPrice(percentageCal) } (<span style="line-height: 26px !important;">${ percentageDiscount }%</span>)`;
      }
    }, 500);
  }

  function formatNumbertoPrice (num) {
    let convertPrice = new Intl.NumberFormat('us-US').format(num);
    const checkDec = convertPrice?.split(".");
    const filterPrice = checkDec.length === 2 ? checkDec[1].length === 1 ? convertPrice += "0" : convertPrice : convertPrice;
    return filterPrice;
  }
</script>